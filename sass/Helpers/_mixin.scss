@mixin styleText($color,$fs,$fw){
color:$color;
font-size: $fs;
font-weight: $fw;
}

@mixin styleButton($color,$bd-color,$border,$fs,$fw,$pd-y,$pd-x){
    color:$color ;
    background-color: $bd-color;
    border:1px solid $border;
    font-size:$fs ;
    font-weight: $fw;
    padding: $pd-y $pd-x;
    cursor: pointer;
    word-wrap: none;
}

@mixin hoverButton($color-hover,$bg-hover,$border-hover){
    color:$color-hover;
    background-color: $bg-hover;
    border:1px solid $border-hover;
}

@mixin styleFormSearch($bg-color,$bg-color-focus,$border-color) {
    .input-group{
        background-color: $bg-color;
        .form-control{
            background-color: transparent;
            border-color:transparent;
            box-shadow: none;
            transition: none;
            &::placeholder{
                color: $color-black-light;
            }
            &:focus{
                background-color: $bg-color-focus;
                border-bottom-color:$border-color;
                border-top-color:$border-color;
                border-left-color:$border-color;
                .input-group-text{
                    background-color: $color-white-0;
                }
            }
            &:focus + .input-group-append{
                .input-group-text{
                    background-color: $color-white-0;
                    border-bottom-color:$color-gray-4;
                    border-top-color:$color-gray-4;
                    border-right-color:$color-gray-4;
                    &:hover{
                        color: $color-white-0;
                        background-color: $color-red-0;
                    }
                }
            }
        }
        .input-group-append{
            .input-group-text{
                background-color: transparent;
                border-color:transparent;
                color:$color-red-0;
                &:hover{
                    color: $color-white-0;
                    background-color: $color-red-0;
                }

            }
            
        }
    }

}

@mixin responsive($screen) {
    @if map-has-key($map:$breakpoints, $key:$screen ){
        $value: map-get($map: $breakpoints, $key: $screen);
        @media screen and (max-width:$value){
            @content;
        }
    }
    @else {
        @warn "`{$screen}` isn't exist in breakpoints";
    }
    
}